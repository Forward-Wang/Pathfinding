var Coordinate=function(b,a){this.row=b;this.column=a};Coordinate.prototype.getRow=function(){return this.row};Coordinate.prototype.getColumn=function(){return this.column};Coordinate.prototype.equals=function(a){if((this.getRow()==a.getRow())&&(this.getColumn()==a.getColumn())){return true}else{return false}};var Node=function(b,a){this.coordinate=b;this.cell=a;this.predecessor=null;this.gCost=null;this.fCost=null};var SquareMap=function(a){this.dimension=a;this.array=Create2DArray(a)};Node.prototype.getCoordinate=function(){return this.coordinate};Node.prototype.getCell=function(){return this.cell};Node.prototype.getGCost=function(){return this.gCost};Node.prototype.setGCost=function(a){this.gScore=a};Node.prototype.getFCost=function(){return this.fCost};Node.prototype.setFCost=function(a){this.fCost=a};Node.prototype.getPredecessor=function(){return this.predecessor};Node.prototype.setPredecessor=function(a){this.predecessor=a};Node.prototype.setInPath=function(){this.getCell().removeClass("closed").addClass("in-path")};Node.prototype.setOpen=function(){this.getCell().addClass("open")};Node.prototype.isOpen=function(){return this.getCell().hasClass("open")};Node.prototype.setClosed=function(){this.getCell().removeClass("open").addClass("closed")};Node.prototype.isClosed=function(){return this.getCell().hasClass("closed")};Node.prototype.makeObstacle=function(){$(this.cell).addClass("obstacle")};Node.prototype.isObstacle=function(){return $(this.cell).hasClass("obstacle")};Node.prototype.isRobot1=function(){return $(this.cell).attr("id")=="robot1"};Node.prototype.isRobot2=function(){return $(this.cell).attr("id")=="robot2"};SquareMap.prototype.getDimension=function(){return this.dimension};SquareMap.prototype.getArray=function(){return this.array};SquareMap.prototype.getNode=function(a){return this.array[a.getRow()][a.getColumn()]};SquareMap.prototype.setNode=function(b,a){this.array[b.getRow()][b.getColumn()]=a};SquareMap.prototype.getNeighboursCoordinates=function(e){var d=e.getCoordinate().getRow();var c=e.getCoordinate().getColumn();var f=this.getDimension();var b=new Set();var a=new Set();if((d+1)<f){b.add(new Coordinate(d+1,c))}if((d-1)>=0){b.add(new Coordinate(d-1,c))}if((c+1)<f){b.add(new Coordinate(d,c+1))}if((c-1)>=0){b.add(new Coordinate(d,c-1))}b.each(function(h){var g=map.getNode(h);if(!g.isObstacle()){a.add(h)}});return a};Node.prototype.isObstacle=function(){return this.getCell().hasClass("obstacle")};function createMap(c,k,f){var a=new SquareMap(c);var g=createCellDiv(f);for(var e=0;e<c;e++){for(var d=0;d<c;d++){if(d==0){var h=g.clone().css("clear","left")}else{var h=g.clone()}var b=new Node(new Coordinate(e,d),h);var h=$("#"+k).append(h);a.array[e][d]=b}}return a}function Create2DArray(b){var a=new Array();for(i=0;i<b;i++){a[i]=new Array();for(j=0;j<b;j++){a[i][j]=null}}return a}function createCellDiv(a){var b=$("<div>",{"class":a});b=b.width("35px");b=b.height("35px");return b}Node.prototype.enableObstacleToggle=function(){this.getCell().click(function(){$(this).toggleClass("obstacle")})};Node.prototype.disableObstacleToggle=function(){this.getCell().unbind("click")};function enableObstacles(d){var c;for(var b=0;b<d.getDimension();b++){for(var a=0;a<d.getDimension();a++){d.getNode(new Coordinate(b,a)).enableObstacleToggle()}}$("#user-message").html("<div data-alert class='alert-box secondary'>You can set more obstacles in the map by clicking on a node.<br/>Grey nodes are free and black nodes are obstacles.<br/>When you have finished, press again the button to proceed.<br/></div>")}function disableObstacles(d){var c;for(var b=0;b<d.getDimension();b++){for(var a=0;a<d.getDimension();a++){d.getNode(new Coordinate(b,a)).disableObstacleToggle()}}}function enableRobot1(){$("#user-message").html("<div data-alert class='alert-box warning'>You can set the positions of the 2 robots by clicking on a node.<br/>When you have finished, select the algorithm to be executed,<br/>set the speed of the animation demo press again the button to execute the DEMO.</div>");$(".cell").not(".obstacle").click(function(){setRobot1($(this));disableRobot();enableRobot2()})}function disableRobot(){$(".cell").unbind("click")}function setRobotsCoordinates(){robot1Coordinate=transform1Dto2D($("#robot1").index(),map.getDimension());robot2Coordinate=transform1Dto2D($("#robot2").index(),map.getDimension())}function enableRobot2(){$(".cell").not("#robot1").not(".obstacle").click(function(){setRobot2($(this));robotsDefined=true;disableRobot();setRobotsCoordinates()})}function executeAlgorithm(){alert("Algorithm executed !")}function setRobot1(a){robot1Image="img/robot1.gif";a.attr("id",robot1ID);a.html("<img src='"+robot1Image+"'/>")}function setRobot2(a){robot2Image="img/robot2.jpg";a.attr("id",robot2ID);a.html("<img src='"+robot2Image+"'/>")}function initHandlers(){$(document).ready(function(){$("#speed-slider-container").hide()});$("#demo-button").click(function(){$(this).unbind("click");$(this).removeClass("info").addClass("disabled");enableObstacles(map);generateRandomObstacles(map.getDimension()*5,map);hasInitiatedDemo=true;$(this).html("Done with obstacles. Set robots positions.");$(this).click(function(){$(this).unbind("click");$(this).removeClass("disabled").addClass("success");$(this).html("Execute DEMO");$("#speed-slider-container").show();$(document).foundation();$("#demo-button").after("<select id='algorithm'><option value='A_star'>A* star algorithm</option><option value='bfs'>Breadth First Search (BFS)</option><option value='dfs'>Depth First Search (DFS)</option></select>");disableObstacles(map);enableRobot1();$(this).click(function(){if(robotsDefined){$(this).unbind("click");$(this).removeClass("success").addClass("alert");$(this).html("Reset DEMO");$("#user-message").hide();var a=$("#speed-slider").attr("data-slider");$("#speed-slider-container").hide();dispatchPathfindingAlgorithm($("#algorithm").val(),a);$(this).click(function(){location.reload()})}else{alert("You must first define the positions of the 2 robots.")}})})});$(window).resize(function(){if(!hasInitiatedDemo){$("#map").html("");mapDimension=calculateResponsiveMapCells();map=createMap(mapDimension,"map","cell")}else{alert("The demo will be reloaded to stay functional");location.reload()}})}function dispatchPathfindingAlgorithm(b,a){if(b=="A_star"){map.executeAStarAlgorithmRecursive(robot1Coordinate,robot2Coordinate,a)}else{if(b=="bfs"){map.executeBFSRecursive(robot1Coordinate,robot2Coordinate,a/4)}else{if(b=="dfs"){map.executeDFSRecursive(robot1Coordinate,robot2Coordinate,a/4)}}}}function transform2Dto1D(b,a){if((b.getRow()>(a-1))||(b.getColumn()>(a-1))){throw new Error("Array out of Index")}else{return(b.getRow()*a+b.getColumn())}}function transform1Dto2D(a,c){if((a<0)||(a>(Math.pow(c,2)-1))){throw new Error("Array out of Index")}else{var d=Math.floor(a/c);var b=a%c;return new Coordinate(d,b)}}function handleUnitTests(){if(unitTestsExecuted==false){executeUnitTests();unitTestsExecuted=true}if(unitTestsVisible==false){$("#qunit").slideToggle({duration:2000,easing:"linear"});unitTestsVisible=true;$("#unit-test-button").html("Disable Unit Tests")}else{$("#qunit").slideToggle({duration:2000,easing:"linear"});unitTestsVisible=false;$("#unit-test-button").html("Enable Unit Tests")}$("#unit-test-button").toggleClass("success").toggleClass("alert")}function reconstructPath(e){var c=new Array();var b=e;c.push(e);var a=b.getPredecessor();while(a!=null){a.setInPath();c.push(a);b=a;a=b.getPredecessor()}var d=c.reverse();return d}function calculateResponsiveMapCells(){var b=$(window).width();var a=b*(8/12);var c=(a/40);return Math.floor(c)-1}function generateRandomObstacles(c,d){for(var a=0;a<c;a++){var e=Math.floor(Math.random()*d.getDimension());var b=Math.floor(Math.random()*d.getDimension());d.getNode(new Coordinate(e,b)).makeObstacle()}}function showStatistics(){$(window).unbind("resize");var c=$(".closed").size();var d=$(".open").size();var b=$(".in-path").size();var a=c+d+b;var e=(b/(a+b)).toFixed(3)*100;$("#extended-number").html(a);$("#final-number").html(b);$("#efficiency-number").html(e+"%");$("#statisticsModal").foundation("reveal","open")};